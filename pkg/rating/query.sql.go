// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: query.sql

package rating

import (
	"context"
)

const getTop30ByRating = `-- name: GetTop30ByRating :many
SELECT id, rating, char_name, char_guild_name, char_level, battles_count, last_match_time FROM bgrating WHERE battles_count > 9 ORDER BY rating DESC, battles_count LIMIT 30
`

func (q *Queries) GetTop30ByRating(ctx context.Context) ([]Bgrating, error) {
	rows, err := q.db.QueryContext(ctx, getTop30ByRating)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Bgrating
	for rows.Next() {
		var i Bgrating
		if err := rows.Scan(
			&i.ID,
			&i.Rating,
			&i.CharName,
			&i.CharGuildName,
			&i.CharLevel,
			&i.BattlesCount,
			&i.LastMatchTime,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
